"""
Django settings for yallib project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
# Configure Django App for Heroku.
import django_heroku
# specify the languages you want to use:
from django.utils.translation import ugettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEST_PEP8_DIRS = [os.path.dirname(BASE_DIR), ]

# Other OPTIONS

TEST_PEP8_EXCLUDE = ['migrations', ]  # Exclude this paths from tests

TEST_PEP8_IGNORE = ['E128', ]  # Ignore this tests

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mazoj5l8e(0ot*asyc%+ege3y5_=3w*ah4+kqtj51cpk^+4@pn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'yallib',
    'test_pep8',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # to be able to determine the userâ€™s language preferences \
    # through the request context:
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Simplified static file serving.
    # https://warehouse.python.org/project/whitenoise/
    'whitenoise.middleware.WhiteNoiseMiddleware',
    # custom middleware
    'yallib.middleware.check_user.CheckUser',
]

ROOT_URLCONF = 'yallib.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.csrf',
                'yallib.context_processors.menu',
                'django.template.context_processors.i18n',

            ],

        },
    },
]
"""
TEMPLATE_CONTEXT_PROCESSORS = (
    'yallib.context_processors.menu',

)
"""

WSGI_APPLICATION = 'yallib.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

LOCAL_DB_PATH = os.environ.get('YAL_DB_PATH', BASE_DIR)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(LOCAL_DB_PATH, 'db.sqlite3'),
    }
}
FIXTURE_DIRS = (
            "/home/work/Documents/Projects/yallib/yallib/fixtures/",
)


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',

    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',

    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',

    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',

    },
]

AUTH_USER_MODEL = 'yallib.User'
# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/
# specify the languages you want to use:

LANGUAGES = (
    ('en', _('English')),
    ('ru', _('Russian')),
)
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
# Extra places for collectstatic to find static files.
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Simplified static file serving.
# https://warehouse.python.org/project/whitenoise/

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Configure Django App for Heroku.

django_heroku.settings(locals())
############################################################
SITE_NAME = 'Yallib'
SITE_DESCRIPTION = 'Yet Anouther Literature Library'
